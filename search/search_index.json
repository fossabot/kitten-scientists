{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Kitten Scientists v2","text":"<p>KS is a userscript for Kittens Game, which allows you to automate most tasks in the game.</p> <p>You load the script into your game through a userscript manager or a bookmarklet and it will create a new panel in your UI with options to configure the behavior of KS.</p> <p>KS was originally developed by Cameron Condry and has since been extended by many great contributors. The v2 of KS is a major effort to rewrite the entire script with more modern approaches, fix all issues in the script, and add new features.</p> <p>Question</p> <p>Please help us translate KS into more languages on Crowdin.</p>"},{"location":"development/","title":"Development Guide","text":"<p>Question</p> <p>Please help us translate KS, either by contributing missing translations or reviewing the existing entries.</p>"},{"location":"development/#introduction","title":"Introduction","text":"<p>The script is written in TypeScript. The JS userscript itself is not intended to be edited. Changes need to be made in the userscript source code and then be compiled into the actual userscript.</p> <p>The project is set up to be used with Visual Studio Code. While other editors will work fine, some integrations have been prepared to make the development process easier.</p>"},{"location":"development/#prerequisites","title":"Prerequisites","text":"<p>The development environment is expected to be a POSIX-compliant system. On Windows, WSL will do fine.</p> <p>You will need NodeJS to be able to work with the project. The project uses yarn as a package and project manager, which is usually integrated with recent NodeJS versions.</p> <p>Additionally, you will need to have Docker available, to use the container-based Kittens Game development server. If you do not have Docker, you can still build a release version of the script and drop that into your userscript manager.</p>"},{"location":"development/#general-development","title":"General Development","text":"<p>Whenever you want to see the result of your changes, use:</p> <pre><code>yarn userscript:build\n</code></pre> <p>This will build a fresh version of the userscript. If you are running a development container, this build output will also be used the next time you refresh the page.</p>"},{"location":"development/#development-with-kittens-game-container","title":"Development with Kittens Game Container","text":"<p>The development container provides a version of Kittens Game that already a Kitten Scientists version injected into it, based on your local development state.</p> <p>When the container is built, it downloads the latest version of the game from https://bitbucket.org/bloodrizer/kitten-game.</p> <ol> <li> <p>Manual Refresh (recommended)</p> <p>Build the development container and start it.</p> <pre><code>yarn devcontainer:run\n</code></pre> <p>The script prints the URL where you can now play the game with KS installed.</p> <p>You will need to manually reload the page after each build to get the latest changes in the browser.</p> </li> <li> <p>Watcher (experimental)</p> <p>Start a watcher to continuously rebuild KS when you make code changes.</p> <pre><code>yarn userscript:watch\n</code></pre> <p>Danger</p> <p>Sadly, this behavior is known to produce broken output files. Use at your own risk and switch to manual builds as necessary.</p> </li> </ol> <p>If you ever want to rebuild the container from scratch, for example, to pull in the latest source code of KG again, run:</p> <pre><code>yarn devcontainer:rebuild\n</code></pre>"},{"location":"development/#kittens-game-branch","title":"Kittens Game Branch","text":"<p>You can run the development container on another branch of Kittens Game by providing the branch name to the <code>devcontainer</code> commands, like so:</p> <pre><code>yarn devcontainer:run dev/alpha\n</code></pre>"},{"location":"development/#development-without-container","title":"Development without Container","text":"<p>To develop without containers, you can build a development version of the userscript with full debugging information.</p> <ol> <li> <p>Run the build script.</p> <pre><code>yarn userscript:preview\n</code></pre> <p>The userscript is placed in the <code>packages/userscript/output</code> directory.</p> </li> </ol>"},{"location":"development/#type-checking","title":"Type-Checking","text":"<p>To fill the Problems panel in VS Code with all current, type-related errors, run the <code>typecheck:all</code> npm task in VS Code.</p>"},{"location":"development/#commit-standards","title":"Commit Standards","text":"<p>KS development follows the Conventional Commits specification for commit messages.</p> <p>Whenever possible, use one of the established scopes:</p> <p>Tab related:</p> <ul> <li><code>bonfire</code></li> <li><code>religion</code></li> <li><code>science</code></li> <li><code>space</code></li> <li><code>time</code></li> <li><code>trade</code></li> <li><code>village</code></li> <li><code>workshop</code></li> </ul> <p>Internals related:</p> <ul> <li> <p><code>api</code></p> <p>Relates to the global <code>kittenScientists</code> API.</p> </li> <li> <p><code>build</code></p> <p>Relates to the process of producing one of the KS release fragment.</p> </li> <li> <p><code>container</code></p> <p>Relates to the KS development container.</p> </li> <li> <p><code>core</code></p> <p>Relates to central behavior of KS. Also includes state management.</p> </li> <li> <p><code>filters</code></p> <p>Relates to the log filters of KS.</p> </li> <li> <p><code>i18n</code></p> <p>Relates to translations of KS.</p> </li> <li> <p><code>settings</code></p> <p>Relates to changes to the settings system.</p> </li> <li> <p><code>ui</code></p> <p>Relates to the KS user interface.</p> </li> </ul>"},{"location":"development/#pull-requests","title":"Pull Requests","text":"<p>When you open a pull request, make sure that you squash your commits into a single one, unless individual commits are substantial enough that they should be preserved as-is. Just make sure that all commits follow the commit standards mentioned above.</p>"},{"location":"development/#releases","title":"Releases","text":""},{"location":"development/#building-a-release-version-of-the-userscript","title":"Building a Release Version of the Userscript","text":"<p>Run the script to build the release:</p> <pre><code>yarn userscript:release\n</code></pre>"},{"location":"development/#releasing-a-new-version","title":"Releasing a New Version","text":"<ol> <li> <p>Build a preview of the script:</p> <pre><code>yarn userscript:preview\n</code></pre> </li> <li> <p>Load the built preview into a userscript manager in Chrome and perform a quick, manual test.</p> <ol> <li>Does the script load at all?</li> <li>Are settings restored to expectation?</li> <li>Are settings saved when they are changed?</li> </ol> </li> <li> <p>Create a tag for this version:</p> <pre><code>git tag v2.0.0-beta.9\n</code></pre> </li> <li> <p>Push the tag:</p> <pre><code>git push --tags\n</code></pre> </li> <li> <p>Raise the version number in <code>packages/userscript/package.json</code> to a higher version that will be in development next!</p> </li> <li> <p>Make sure to also update the <code>README.md</code> to point the bookmarklet to the new script.</p> </li> <li> <p>Make sure to also update the <code>packages/documentation/installation.md</code> to point to the latest version number.</p> </li> <li> <p>Make sure to also update the <code>.github/bug_report.yml</code> to mention the latest version number.</p> </li> </ol> <p>Note</p> <p>Don't forget to publish the drafted release on GitHub!</p>"},{"location":"installation/","title":"Installation","text":""},{"location":"installation/#userscript-manager-recommended","title":"Userscript Manager (recommended)","text":"<p>Hint</p> <p>If you don't have a userscript manager yet, Tampermonkey is a good solution for the most popular browsers.</p> <p>The file you need to put into your userscript manager is available from the Releases page of KS.</p> <p>KS is released in 3 variants:</p> <ol> <li> <p>The latest stable release.</p> <p>This is a release with a familiar version number, that has been designated as a reasonably stable version to use. At this time, that is:</p> <p>https://github.com/kitten-science/kitten-scientists/releases/tag/v2.0.0-beta.6.</p> </li> <li> <p>The nightly release.</p> <p>This release is built each night, if any changes have been made to the source code since the last nightly build.</p> <p>These builds usually have a time stamp in their filename, like <code>20230103</code>, which designates the night they were built on.</p> <p>https://github.com/kitten-science/kitten-scientists/releases/tag/nightly</p> </li> <li> <p>The latest release.</p> <p>This is built after every single change to the codebase. It should be considered highly unstable and experimental, although it usually isn't.</p> <p>https://github.com/kitten-science/kitten-scientists/releases/tag/latest</p> </li> </ol> <p>For each of these releases, you will usually find 2 important files:</p> <ol> <li>A file that ends in <code>.min.user.js</code></li> <li>A file that ends in <code>.user.js</code></li> </ol> <p>Usually, you want to use the <code>.user.js</code> version, unless you are very concerned about bandwidth usage.</p>"},{"location":"installation/#bookmarklet","title":"Bookmarklet","text":"<p>You can also load KS through a bookmarklet.</p> <p>To use bookmarklets, just create a new bookmark in your browser and enter the text below as the URL. When you're on the KG game website, open this bookmark, and it should load KS for you.</p> <p>Note</p> <p>This bookmarklet points to the latest stable release of KS.</p> <pre><code>javascript:(function(){var d=document,s=d.createElement('script');s.src='https://github.com/kitten-science/kitten-scientists/releases/download/v2.0.0-beta.6/kitten-scientists-2.0.0-beta.6.user.js';d.body.appendChild(s);})();\n</code></pre>"},{"location":"installation/#container","title":"Container","text":"<p>Warning</p> <p>If you're not familiar with Docker/OCI containers, then you can safely ignore this section.</p> <p>You can pull any version of the script as a container. The images are hosted on the GitHub registry.</p> <p>The container exposes Kittens Game's own development server on port 8080. It has the version of the userscript injected into it, according to the tag on the image.</p> <pre><code>docker run --publish 8080:8080 --rm ghcr.io/kitten-science/kitten-scientists:2.0.0-beta.6\n</code></pre>"},{"location":"reference/Repository%20Scripts/","title":"Full reference","text":""},{"location":"reference/Repository%20Scripts/#devcontainerbuild","title":"devcontainer:build","text":"<ul> <li>Project: <code>@kitten-science/kitten-game</code></li> <li> <p>Source:</p> <pre><code>docker build --tag kitten-game .\n</code></pre> </li> <li> <p>Description:</p> <p>Builds the Development Container.</p> </li> </ul>"},{"location":"reference/Repository%20Scripts/#devcontainerrebuild","title":"devcontainer:rebuild","text":"<ul> <li>Project: <code>@kitten-science/kitten-game</code></li> <li> <p>Source:</p> <pre><code>docker build --no-cache --tag kitten-game .\n</code></pre> </li> <li> <p>Description:</p> <p>Rebuilds the development container.</p> <p>You're going to want to rebuild your development container every once in a while to ensure you're using the latest version of Kittens Game in your container.</p> </li> </ul>"},{"location":"reference/Repository%20Scripts/#devcontainerrun","title":"devcontainer:run","text":"<ul> <li>Project: <code>@kitten-science/kitten-game</code></li> <li> <p>Source:</p> <pre><code>bash ./scripts/run-development-container.sh\n</code></pre> </li> <li> <p>Description:</p> <p>Builds the development container and starts it.</p> </li> </ul>"},{"location":"reference/Repository%20Scripts/#docsbuild","title":"docs:build","text":"<ul> <li>Project: <code>@kitten-science/documentation</code></li> <li> <p>Source:</p> <pre><code>.scripts/build.sh\n</code></pre> </li> <li> <p>Description:</p> <p>Build the documentation.</p> </li> </ul>"},{"location":"reference/Repository%20Scripts/#docsnsd","title":"docs:nsd","text":"<ul> <li>Project: <code>@kitten-science/documentation</code></li> <li> <p>Source:</p> <pre><code>nsd --cwd=$INIT_CWD --docs-location=\"packages/documentation/docs/reference/Repository Scripts/\"\n</code></pre> </li> <li> <p>Description:</p> <p>Update the scripts documentation that you are looking at right now.</p> </li> </ul>"},{"location":"reference/Repository%20Scripts/#docsserve","title":"docs:serve","text":"<ul> <li>Project: <code>@kitten-science/documentation</code></li> <li> <p>Source:</p> <pre><code>.scripts/serve.sh\n</code></pre> </li> <li> <p>Description:</p> <p>Start the mkdocs-material development server to work on the documentation.</p> </li> </ul>"},{"location":"reference/Repository%20Scripts/#lintall","title":"lint:all","text":"<ul> <li>Project: <code>kitten-scientists</code></li> <li> <p>Source:</p> <pre><code>eslint . --ext .ts\n</code></pre> </li> <li> <p>Description:</p> <p>Check source code for style issues.</p> </li> </ul>"},{"location":"reference/Repository%20Scripts/#testsbuild","title":"tests:build","text":"<ul> <li>Project: <code>@kitten-science/tests</code></li> <li> <p>Source:</p> <pre><code>tsc --build\n</code></pre> </li> <li> <p>Description:</p> <p>Build tests.</p> </li> </ul>"},{"location":"reference/Repository%20Scripts/#testsrun","title":"tests:run","text":"<ul> <li>Project: <code>@kitten-science/tests</code></li> <li> <p>Source:</p> <pre><code>mocha output/tests/*.spec.js\n</code></pre> </li> <li> <p>Description:</p> <p>Execute tests.</p> </li> </ul>"},{"location":"reference/Repository%20Scripts/#typecheckall","title":"typecheck:all","text":"<ul> <li>Project: <code>kitten-scientists</code></li> <li> <p>Source:</p> <pre><code>tsc --noEmit --incremental false\n</code></pre> </li> <li> <p>Description:</p> <p>Run the TypeScript compiler to find problems with the code.</p> </li> </ul>"},{"location":"reference/Repository%20Scripts/#userscriptbuild","title":"userscript:build","text":"<ul> <li>Project: <code>@kitten-science/userscript</code></li> <li> <p>Source:</p> <pre><code>vite --config vite.config.inject.js build\n</code></pre> </li> <li> <p>Description:</p> <p>Build the userscript.</p> <p>This builds the version of the script that is also used in the development container.</p> </li> </ul>"},{"location":"reference/Repository%20Scripts/#userscriptpreview","title":"userscript:preview","text":"<ul> <li>Project: <code>@kitten-science/userscript</code></li> <li> <p>Source:</p> <pre><code>DEV_BUILD=true vite --config vite.config.userscript.js build\n</code></pre> </li> <li> <p>Description:</p> <p>Build a development release version of the userscript.</p> </li> </ul>"},{"location":"reference/Repository%20Scripts/#userscriptrelease","title":"userscript:release","text":"<ul> <li>Project: <code>@kitten-science/userscript</code></li> <li> <p>Source:</p> <pre><code>MINIFY=true vite --config vite.config.userscript.js build\nvite --config vite.config.userscript.js build\n</code></pre> </li> <li> <p>Description:</p> <p>Build a release version of the userscript.</p> <p>This is usually only used from CI to build both the regular version of the script, as well as a minified build. When you use this locally, it still builds both files, but clears the output directory between builds. So you end up with only the regular version.</p> </li> </ul>"},{"location":"reference/Repository%20Scripts/#userscriptversion","title":"userscript:version","text":"<ul> <li>Project: <code>@kitten-science/userscript</code></li> <li> <p>Source:</p> <pre><code>node version.cjs\n</code></pre> </li> <li> <p>Description:</p> <p>Returns the version for the userscript.</p> </li> </ul>"},{"location":"reference/Repository%20Scripts/#userscriptwatch","title":"userscript:watch","text":"<ul> <li>Project: <code>@kitten-science/userscript</code></li> <li> <p>Source:</p> <pre><code>vite --config vite.config.inject.js build --watch\n</code></pre> </li> <li> <p>Description:</p> <p>Builds the userscript and watches all files for changes. If changes are detected, the script is rebuilt.</p> <p>Warning</p> <p>This watcher has caused problems in the past, generating broken output. Use at your own risk.</p> </li> </ul>"},{"location":"sections/bonfire/","title":"Bonfire","text":""},{"location":"sections/bonfire/#buildings","title":"Buildings","text":"<p>When you enable a building, this building will be built if all of these are true:</p> <ol> <li> <p>Less than Max buildings have already been built.</p> </li> <li> <p>All of the resources required for the building to built are filled to Trigger of their stock capacity.</p> </li> <li> <p>All of the resources required for the building to built are sufficiently available after considering configured Stock and Consume.</p> </li> </ol>"},{"location":"sections/bonfire/#upgrades","title":"Upgrades","text":"<p>Buildings with a <code>\u2ba4</code> in front of their name are upgrades to the building above them.</p> <p>You can select which upgrade will be automatically purchased by enabling them under Upgrade buildings.</p>"},{"location":"sections/bonfire/#additional-options","title":"Additional Options","text":""},{"location":"sections/bonfire/#turn-on-steamworks","title":"Turn on Steamworks","text":"<p>Turns on the Steamworks building as soon as the first one is purchased, and keeps them turned on.</p>"},{"location":"sections/bonfire/#turn-on-magnetos","title":"Turn on Magnetos","text":"<p>Turns on the Magnetos building as soon as the first one is purchased, and keeps them turned on.</p>"},{"location":"sections/internals/","title":"Internals","text":""},{"location":"sections/internals/#interval","title":"Interval","text":"<p>This specifies how much time should pass between every single time KS evaluates the game and checks if any automations should be applied.</p> <p>By default, this is <code>2000</code> milliseconds, which is <code>2</code> seconds.</p> <p>Danger</p> <p>Lowering this value can cause instability or freeze your game, because so many browser resources will be spent on KS. If you want to speed up KS, lower the interval gradually.</p>"},{"location":"sections/internals/#language","title":"Language","text":"<p>Allows you to select a language different from the language used in KG.</p> <p>Initially, KS will just use the language KG is set at, but you can override this language here.</p>"},{"location":"sections/internals/#other-internals","title":"Other internals","text":"<p>Some users may experience slow loads of KG itself, causing KS to fail to load in time, as the timeout for the loader is \"only\" 2 minutes.</p> <p>In case you are impacted by this, set <code>localStorage[\"ks.timeout\"]</code> to the amount of milliseconds KS should wait for KG to load. The default value is <code>120000</code>, which correlates to the amount of milliseconds in 2 minutes.</p>"},{"location":"sections/log-filters/","title":"Log Filters","text":"<p>You can control which events will be logged to the game log. Disable any option if the log message in that category get too excessive.</p>"},{"location":"sections/log-filters/#adoring","title":"Adoring","text":"<ul> <li>The galaxy has been adored on the Religion tab.</li> </ul>"},{"location":"sections/log-filters/#astronomical-events","title":"Astronomical Events","text":"<ul> <li>You have observed the stars.</li> </ul>"},{"location":"sections/log-filters/#building","title":"Building","text":"<ul> <li>A building has been built on the Bonfire tab.</li> <li>A Ziggurat or Cryptotheology building has been built on the Religion tab.</li> <li>A building has been built on the Space tab.</li> <li>A building has been built on the Time tab.</li> <li>An embassy has been built on the Trade tab.</li> </ul>"},{"location":"sections/log-filters/#crafting","title":"Crafting","text":"<ul> <li>Some resources have been crafted on the Workshop tab.</li> </ul>"},{"location":"sections/log-filters/#distribute","title":"Distribute","text":"<ul> <li>A kitten has been distributed to a job on the Village tab.</li> </ul>"},{"location":"sections/log-filters/#festivals","title":"Festivals","text":"<ul> <li>A festival has either started, or has been extended on the Village tab.</li> </ul>"},{"location":"sections/log-filters/#hunting","title":"Hunting","text":"<ul> <li>Your kittens have hunted on the Village tab.</li> </ul>"},{"location":"sections/log-filters/#miscellaneous","title":"Miscellaneous","text":"<p>currently unused</p>"},{"location":"sections/log-filters/#order-of-the-sun","title":"Order of the Sun","text":"<ul> <li>An Order of the Sun building has been discovered on the Religion tab.</li> <li>Alicorns have been sacrificed on the Religion tab.</li> <li>Tears have been refined to BLS on the Religion tab.</li> <li>TCs have been refined to Relics on the Religion tab.</li> </ul>"},{"location":"sections/log-filters/#praising","title":"Praising","text":"<ul> <li>You have praised the sun on the Religion tab.</li> </ul>"},{"location":"sections/log-filters/#promote-leader","title":"Promote leader","text":"<ul> <li>Your leader has been promoted on the Village tab.</li> </ul>"},{"location":"sections/log-filters/#researching","title":"Researching","text":"<ul> <li>A science item has been unlocked on the Science tab.</li> </ul>"},{"location":"sections/log-filters/#tempus-fugit","title":"Tempus Fugit","text":"<ul> <li>Time has been accelerated on the Time tab.</li> </ul>"},{"location":"sections/log-filters/#time-skip","title":"Time Skip","text":"<ul> <li>Time has been skipped, by combusting TCs on the Time tab.</li> </ul>"},{"location":"sections/log-filters/#trading","title":"Trading","text":"<ul> <li>A trade has been made on the Trade tab.</li> </ul>"},{"location":"sections/log-filters/#transcend","title":"Transcend","text":"<ul> <li>You have transcended on the Religion tab.</li> </ul>"},{"location":"sections/log-filters/#upgrading","title":"Upgrading","text":"<ul> <li>A Bonfire building has been upgraded to a higher level.</li> <li>A Space missing has been conducted.</li> <li>Another tribe has been unlocked on the Trade tab.</li> <li>An upgrade has been purchased on the Workshop tab.</li> </ul>"},{"location":"sections/overview/","title":"Overview","text":""},{"location":"sections/overview/#introduction","title":"Introduction","text":"<p>The UI of KS is divided into several major sections. The names of these sections correlate to the main tabs in the KG UI.</p> <p>Refer to the individual section documentation pages for details of the automation features on those sections.</p>"},{"location":"sections/overview/#ui-concepts","title":"UI Concepts","text":""},{"location":"sections/overview/#panels","title":"Panels","text":"<p>The UI of KS is made up of panels. You recognize a panel from the little <code>+</code> symbol on it. When you click on the <code>+</code>, the panel expands and the <code>+</code> turns into a <code>-</code>. When you now click the <code>-</code>, the panel collapses again.</p> <p>Note</p> <p>The <code>+</code>/<code>-</code> button is often referred to as an expando.</p> <p>Most panels are also settings. Which means that they have a checkbox as their top element, which is always visible, even when the panel is collapsed. When you disable this setting, it causes any automation that is controlled through that section of the UI to be bypassed.</p>"},{"location":"sections/overview/#settings","title":"Settings","text":"<p>A setting in KS is most commonly a checkbox. When the checkbox is checked, this feature is active. If the checkbox is unchecked, the feature is inactive.</p> <p>Some settings also come with additional options. These are shown on the same line as the checkbox. You can click on these options to change their value. Sometimes, these options behave like expando buttons and expand an entire new panel with options.</p>"},{"location":"sections/overview/#settings-lists","title":"Settings Lists","text":"<p>A settings list is a series of settings that have are grouped with each other. Sometimes, these lists have tools at the bottom. These tools can be any of these:</p> <ol> <li> <p>Enable all options</p> <p>Activates everything.</p> </li> <li> <p>Disable all options</p> <p>Turns everything off.</p> </li> <li> <p>Reset to defaults</p> <p>Set all options to the values that come with KS.</p> </li> </ol>"},{"location":"sections/overview/#triggers","title":"Triggers","text":"<p>One common option to see is the trigger, symbolized by a little lightning. A trigger usually communicates at which threshold an automation should become active. Which resource this threshold refers to, is documented with the individual automations.</p> <p>Triggers can be absolute values or, most commonly, a percentage. This percentage then usually refers to your storage capacity for a given resource. When you enter a percentage value into KS, it expects you to provide it as a value between <code>0</code> and <code>1</code>. So if you wanted a trigger value at \u00be of your storage capacity, you'd enter <code>0.75</code>.</p>"},{"location":"sections/overview/#limits","title":"Limits","text":"<p>Another common option is the limit. This will usually prevent an automation from going over a certain value. The most important aspects to understand are:</p> <ul> <li><code>-1</code> means infinity. Effectively disables the limit.</li> <li><code>0</code> means don't do anything ever.</li> <li>any other number will be the limit for this automation.</li> </ul> <p>Hint</p> <p>When entering limits, you can usually use the KG notations for big numbers. So <code>9.5M</code> will become <code>9,500,000</code>. You have to use upper-case letters for this to work though.</p>"},{"location":"sections/religion/","title":"Religion","text":""},{"location":"sections/religion/#ziggurats","title":"Ziggurats","text":"<p>In general, all selected buildings are built, until their <code>Max</code> is reached.</p> <p>When you enable Build Best Unicorn Building First, KS will evaluate which of the available buildings will provide the best return in unicorns for its cost. It will also automatically sacrifice unicorns to get the tears for the next building.</p>"},{"location":"sections/religion/#order-of-the-sun","title":"Order of the Sun","text":"<p>All selected buildings are built, until their <code>Max</code> is reached.</p>"},{"location":"sections/religion/#cryptotheology","title":"Cryptotheology","text":"<p>All selected buildings are built, until their <code>Max</code> is reached.</p>"},{"location":"sections/religion/#additional-options","title":"Additional Options","text":""},{"location":"sections/religion/#sacrifice-unicorns","title":"Sacrifice Unicorns","text":"<p>When you have <code>Trigger</code> amount of unicorns, sacrifice them to earn tears.</p>"},{"location":"sections/religion/#sacrifice-alicorns","title":"Sacrifice Alicorns","text":"<p>When you have <code>Trigger</code> amount of alicorns, sacrifice them to earn time crystals.</p>"},{"location":"sections/religion/#refine-tears","title":"Refine Tears","text":"<p>When you have <code>Trigger</code> amount of tears, refine them into BLS.</p>"},{"location":"sections/religion/#refine-tcs","title":"Refine TCs","text":"<p>When you have <code>Trigger</code> amount of TCs, refine them into relics.</p>"},{"location":"sections/religion/#transcend","title":"Transcend","text":"<p>Spends your epiphany to transcend, whenever that would be considered beneficial.</p> <p>When you would usually only transcend at the end of a run, KS can determine during a run if transcending would allow you to regain the spent epiphany so much faster, than it would be reasonable to just do it right now during the run.</p> <p>While this might seem like a way too powerful thing to automate, it is usually safe to have this enabled, to not miss a good moment to transcend.</p>"},{"location":"sections/religion/#adore-the-galaxy","title":"Adore the Galaxy","text":"<p>Converts your worship into epiphany, whenever you will regain <code>Trigger</code> percent of your Solar Revolution bonus with a single praise after the conversion.</p> <p>Example</p> <p>Let's assume your current max Solar Revolution bonus would be <code>1000%</code>. If you set the trigger to <code>0.75</code>, KS would adore the galaxy, if the next Praise the Sun after that would get you back to <code>750%</code> Solar Revolution bonus.</p>"},{"location":"sections/religion/#praise-the-sun","title":"Praise the Sun","text":"<p>Converts your faith to worship, when you have filled your capacity to <code>Trigger</code> percent.</p>"},{"location":"sections/resource-control/","title":"Resource Control","text":"<p>This section allows you to control how much of your resources will be consumed by KS automations.</p>"},{"location":"sections/resource-control/#stock","title":"Stock","text":"<p>The value you set for Stock determines the amount of the resource that KS will never touch. The only reason to set this value to anything but <code>0</code>, is for you to manually do something. The stocked amount of the resource will be entirely unavailable to KS.</p>"},{"location":"sections/resource-control/#consume","title":"Consume","text":"<p>The Consume rate defines how much of an available resource should be made available to automation as a percentage.</p> <p>This applies to the amount of resources that are available after the Stock has been considered. Of the excess amount beyond your stock, the consume rate is made available for consumption.</p> <p>The default value for this is always <code>1</code>. You would usually want to lower this, if you want to interact with the game more manually.</p> <p>Example</p> <p>Your capacity for Wood is <code>10K</code>. Your Stock for Wood is <code>5K</code>. Your Consume rate for Wood is set to <code>0.1</code>.</p> <p>When an automation now asks for the available amount of Wood, we would expect the result to be:</p> <p>( 10K Wood - 5K Stock ) * 0.1 Consume Rate = 500 Wood</p>"},{"location":"sections/science/","title":"Science","text":""},{"location":"sections/science/#technologies","title":"Technologies","text":"<p>All enabled technologies will automatically be researched.</p>"},{"location":"sections/science/#policies","title":"Policies","text":"<p>All enabled policies will automatically be researched.</p>"},{"location":"sections/science/#observe-astro-events","title":"Observe Astro Events","text":"<p>Observes astronomical events, whenever they occur.</p>"},{"location":"sections/space/","title":"Space","text":""},{"location":"sections/space/#planet-buildings","title":"Planet Buildings","text":"<p>When you enable a building, this building will be built if all of these are true:</p> <ol> <li> <p>Less than Max buildings have already been built.</p> </li> <li> <p>All of the resources required for the building to built are filled to Trigger of their stock capacity.</p> </li> <li> <p>All of the resources required for the building to built are sufficiently available after considering configured Stock and Consume.</p> </li> </ol>"},{"location":"sections/space/#start-missions","title":"Start Missions","text":"<p>The missions you select, will automatically be started as soon as the required materials are available.</p>"},{"location":"sections/state-management/","title":"State Management","text":"<p>Danger</p> <p>This section contains features that can erase all of your KS settings, or even your entire save game. Absolutely back up your game before exploring these!</p> <p>If you disable the checkbox Do NOT confirm destructive actions. (Danger!), you will not be asked to confirm any actions that destroy your data. Enabling this option allows you to switch between states with a single click and load save games very quickly.</p>"},{"location":"sections/state-management/#copy-to-clipboard","title":"Copy to Clipboard","text":"<p>With a single click you can copy only your KS settings, or your entire KG save game to the clipboard.</p> <p>The Compress data setting controls if the copied content will be compressed with the same process that KG uses when you export your save. When you don't compress the data, you will be able to read and edit it in plain text.</p> <p>Note</p> <p>When you want to export a KG save game, and you want to be able to load it through the regular KG import mechanism later, remember that KG only expects compressed data.</p>"},{"location":"sections/state-management/#load-from-clipboard","title":"Load from Clipboard","text":"<p>You can load either only KS settings or an entire KG save game. When you use either option, you can enter your save game data into the appearing prompt. KS supports loading both compressed and uncompressed data.</p>"},{"location":"sections/state-management/#local-states","title":"Local States","text":"<p>Allows you to quickly store and restore entire sets of KS settings.</p> <p>When you store your current state, KS places it in the Load stored state section. You can then click on that state to load it again. You can also import a state from the clipboard. Both compressed and uncompressed states can be imported.</p>"},{"location":"sections/state-management/#reset-to-factory-defaults","title":"Reset to Factory Defaults","text":"<p>Resets every setting to the state that KS would have if you used it for the first time today. This only impacts KS, your KG save game is not touched by this action.</p>"},{"location":"sections/state-management/#load-stored-states","title":"Load Stored States","text":"<p>When you have stored any states, they will appear in this list. Clicking on their name will load them.</p> <p>You can also sync the stored state with your current settings state, copy the state to the clipboard, or delete it. When copying a state, the Compress data setting is respected.</p>"},{"location":"sections/time-control/","title":"Time Control","text":"<p>Info</p> <p>This section is still pending being documented.</p> <p>Our goal is to provide a full documentation during the beta phase. Please check back soon.</p>"},{"location":"sections/time/","title":"Time","text":"<p>Info</p> <p>This section is still pending being documented.</p> <p>Our goal is to provide a full documentation during the beta phase. Please check back soon.</p>"},{"location":"sections/trade/","title":"Trade","text":"<p>When you enable a given tribe, KS will automatically trade with them, if both Catpower and Gold are filled to Trigger of their capacity.</p>"},{"location":"sections/trade/#limited-trading","title":"Limited Trading","text":"<p>When you enable Limited for a trade, you will only trade if the trade would be considered profitable.</p> <p>Profitability is determined by the amount of resources you spend vs. the amount of resources you gain. The individual resources are not weighted.</p>"},{"location":"sections/trade/#unlimited-trading","title":"Unlimited Trading","text":"<p>Whenever catpower and gold are above the trigger value, instantly trigger a trade.</p>"},{"location":"sections/trade/#feed-leviathans","title":"Feed Leviathans","text":"<p>Whenever you have any Necrocorns, and the Leviathans are around, feed the necrocorns to them.</p> <p>This increases the leviathans energy, which increases the amount of resources you receive from a trade with them. Beyond being a rare resource, necrocorns have no other purpose.</p>"},{"location":"sections/trade/#trade-blackcoin","title":"Trade Blackcoin","text":"<p>Automatically buys Blackcoin when the price is below the Buy trigger, and automatically sells blackcoin when the price is above the Sell trigger.</p> <p>The price of blackcoin steadily rises, until it crashes at some point. So you want to buy as long as the price climbs and is stable. When it becomes unstable and will crash soon, you want to sell.</p>"},{"location":"sections/trade/#explore-new-races","title":"Explore new Races","text":"<p>Explores new tribes as they become available.</p>"},{"location":"sections/village/","title":"Village","text":""},{"location":"sections/village/#jobs","title":"Jobs","text":"<p>The top section lets you control how to automatically assign free kittens to jobs.</p> <p>Free kittens will be assigned to all enabled jobs until their respective Max is reached. Kittens are distributed one by one over time. Whichever job has the lowest amount of kittens assigned, will be assigned the next free kitten.</p>"},{"location":"sections/village/#additional-options","title":"Additional Options","text":""},{"location":"sections/village/#hunt","title":"Hunt","text":"<p>Sends your hunters on a hunt, when your catpower has reached Trigger of its capacity.</p>"},{"location":"sections/village/#hold-festivals","title":"Hold Festivals","text":"<p>Holds festivals whenever they are considered profitable. A festival is considered profitable if all of the spent resources are regained over the period of the festival.</p>"},{"location":"sections/village/#promote-kittens","title":"Promote Kittens","text":"<p>Promotes your kittens, when your gold has reached Trigger of its capacity. Kittens are promoted if you have engineers that would profit from having a higher rank. Otherwise, high ranks are meaningless.</p>"},{"location":"sections/village/#promote-leader","title":"Promote Leader","text":"<p>Promotes your leader, as soon as possible.</p>"},{"location":"sections/village/#elect-leader","title":"Elect leader","text":"<p>Elects a kitten with the given attributes as a leader.</p>"},{"location":"sections/workshop/","title":"Workshop","text":""},{"location":"sections/workshop/#resource-crafting","title":"Resource Crafting","text":"<p>In general, resources are crafted if they are enabled and less than Max resources are already in stock.</p> <p>Additionally, if crafting a resource requires one or more materials that have a capacity, those materials need to be filled to Trigger of their stock capacity.</p> <p>Example</p> <p>Wood has a capacity. If you want to craft Beams, and you set a trigger of <code>0.5</code>, then beams would be crafted if wood is filled to half of its stock capacity.</p> <p>When you want to craft Megaliths, they are built from Beams, Slabs, and Plates. All of which have no capacity. So the trigger value does not apply to this craft.</p>"},{"location":"sections/workshop/#unlimited-crafting","title":"Unlimited Crafting","text":"<p>Just craft as many items as possible, respecting your Resource Control configuration.</p>"},{"location":"sections/workshop/#limited-crafting","title":"Limited Crafting","text":"<p>For a limited item to be crafted, we first look at all the materials that are required for the item to be crafted, and at our current stock for the item. We then calculate how much of our materials would be required to build all the items we already have in stock. If we have more materials than that, then we allow the additional materials to be crafted into more of the craftable item.</p> <p>Example</p> <p>Let's assume you want to craft Beams. A beam costs 175 Wood, and you have 1 beam in stock. KS would then craft the next beam when you have 350 wood available.</p>"},{"location":"sections/workshop/#force-ships-to-243","title":"Force Ships to 243","text":"<p>When enabled, Trade Ships will be handled as unlimited, regardless of the actual configuration, until you have at least 243 ships in stock.</p> <p>Quote</p> <p>Having 243 or more ships will guarantee that you get titanium from a trade. The exact number is <code>1700/7</code> ships, which rounds up to 243.</p> <p>https://wiki.kittensgame.com/en/general-information/resources/ship</p>"},{"location":"sections/workshop/#research-upgrades","title":"Research Upgrades","text":"<p>Selected upgrades will automatically be researched as soon as possible.</p>"}]}